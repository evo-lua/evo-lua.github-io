"use strict";(self.webpackChunkevo_lua_github_io=self.webpackChunkevo_lua_github_io||[]).push([[918],{8573:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(7462),a=t(7294),i=t(2389),u=t(1170),s=t(5864);const l="https://github.com/evo-lua/evo-luvi/blob/main/Tests/Examples/";function o(e){let{children:n,...o}=e;const m=(0,i.Z)(),c=function(e){return a.Children.toArray(e).some((e=>(0,a.isValidElement)(e)))?e:Array.isArray(e)?e.join(""):e}(n),p="string"==typeof c?s.Z:u.Z,g=l+o.source,d=o.source?a.createElement(a.Fragment,null,a.createElement("a",{className:"optional-snippet-source",href:g},g)):"";let h="Loading snippet...";return h=o.source?t(6720)[o.source]??"[[ERROR: Failed to load snippet "+o.source+"\nReason: No such entry exists in the autogenerated snippet database\n\nPlease report this problem!]]":c,a.createElement(a.Fragment,null,a.createElement(p,(0,r.Z)({key:String(m)},o),h),d)}},6720:e=>{e.exports=JSON.parse('{"cli-app-args.lua":"local arguments = { ... }\\n\\nprint(\\"Number of command-line arguments received:\\", #arguments)\\n\\nprint(\\"Dumping command-line arguments...\\")\\ndump(arguments)\\n\\nprint(\\"Iterating over command-line arguments...\\")\\nfor index, argument in pairs(arguments) do\\n\\tprint(index, argument)\\nend\\n","cli-global-arg.lua":"local arguments = { ... }\\n\\nprint(\\"Number of command-line arguments received:\\", #arguments)\\n\\nprint(\\"Dumping command line arguments (only those after the -- delimiter)...\\")\\ndump(arguments)\\n\\n-- Alternatively, access the full arguments vector (argv in C) passed to the runtime\\nprint(\\"Dumping command line arguments (the full C arguments vector)...\\")\\nprint(\\"Full arguments count:\\", #arg)\\ndump(arg)\\n","uv-exepath.lua":"local libuv = require(\\"uv\\")\\nprint(\\"The executable running this script is located here:\\", libuv.exepath())\\n"}')}}]);
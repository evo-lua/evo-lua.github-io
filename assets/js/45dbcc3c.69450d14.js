"use strict";(self.webpackChunkevo_lua_github_io=self.webpackChunkevo_lua_github_io||[]).push([[5464],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},o=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,f=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return n?a.createElement(f,u(u({ref:t},o),{},{components:n})):a.createElement(f,u({ref:t},o))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,u=new Array(i);u[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,u[1]=l;for(var d=2;d<i;d++)u[d]=n[d];return a.createElement.apply(null,u)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9458:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>u,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={},u="stduuid",l={unversionedId:"references/api/stduuid",id:"references/api/stduuid",title:"stduuid",description:"LuaJIT bindings for the embedded stduuid library",source:"@site/docs/references/api/stduuid.md",sourceDirName:"references/api",slug:"/references/api/stduuid",permalink:"/docs/references/api/stduuid",draft:!1,editUrl:"https://github.com/evo-lua/evo-lua.github.io/edit/main/docs/references/api/stduuid.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"inspect",permalink:"/docs/references/api/inspect"},next:{title:"transform",permalink:"/docs/references/api/transform"}},s={},d=[{value:"Status",id:"status",level:2},{value:"Availability",id:"availability",level:2},{value:"Fields",id:"fields",level:2},{value:"cdefs",id:"cdefs",level:3},{value:"bindings",id:"bindings",level:3},{value:"Functions",id:"functions",level:2},{value:"initialize",id:"initialize",level:3},{value:"version",id:"version",level:3},{value:"Native Bindings",id:"native-bindings",level:2},{value:"uuid_create_v4",id:"uuid_create_v4",level:3},{value:"uuid_create_mt19937",id:"uuid_create_mt19937",level:3},{value:"uuid_create_v5",id:"uuid_create_v5",level:3},{value:"uuid_create_system",id:"uuid_create_system",level:3},{value:"Changelog",id:"changelog",level:2}],o=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},c=o("FFI"),p=o("External"),m={toc:d},f="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(f,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stduuid"},"stduuid"),(0,r.kt)("p",null,"LuaJIT bindings for the embedded ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mariusbancila/stduuid"},"stduuid")," library"),(0,r.kt)(c,{mdxType:"FFI"}),(0,r.kt)("h2",{id:"status"},"Status"),(0,r.kt)(p,{mdxType:"External"}),(0,r.kt)("h2",{id:"availability"},"Availability"),(0,r.kt)("p",null,"This module is preloaded. You can simply ",(0,r.kt)("inlineCode",{parentName:"p"},"require")," it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local stduuid = require("stduuid")\n')),(0,r.kt)("h2",{id:"fields"},"Fields"),(0,r.kt)("h3",{id:"cdefs"},"cdefs"),(0,r.kt)("p",null,"A string representing the C type definitions that were used to load the FFI bindings. Do not attempt to ",(0,r.kt)("inlineCode",{parentName:"p"},"ffi.load")," them manually."),(0,r.kt)("h3",{id:"bindings"},"bindings"),(0,r.kt)("p",null,"A pointer to the statically-loaded exports table that exposes the bound functions to Lua. For more details, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/background-information/luajit/static-ffi-bindings"},"this note"),"."),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"initialize"},"initialize"),(0,r.kt)("p",null,"Initializes the bindings by loading the ",(0,r.kt)("a",{parentName:"p",href:"#cdefs"},"C type definitions"),". Automatically called by the runtime when it sets up the Lua environment"),(0,r.kt)("h3",{id:"version"},"version"),(0,r.kt)("p",null,"Returns the embedded stduuid library version as a Lua string."),(0,r.kt)("h2",{id:"native-bindings"},"Native Bindings"),(0,r.kt)("p",null,"All C functions listed here can be accessed via ",(0,r.kt)("inlineCode",{parentName:"p"},"stduuid.bindings")," and must be called with the appropriate ",(0,r.kt)("inlineCode",{parentName:"p"},"cdata")," values."),(0,r.kt)("h3",{id:"uuid_create_v4"},"uuid_create_v4"),(0,r.kt)("p",null,"Generates a UUID using the default (basic) random number generator. May produce inferior randomness (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mariusbancila/stduuid#random-uuids"},"see details here"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool uuid_create_v4(uuid_rfc_string_t* result);\n")),(0,r.kt)("h3",{id:"uuid_create_mt19937"},"uuid_create_mt19937"),(0,r.kt)("p",null,"Generates a UUID using the ",(0,r.kt)("a",{parentName:"p",href:"https://cplusplus.com/reference/random/mt19937/"},"mt19937")," random number generator. Produces high-quality randomness via ",(0,r.kt)("a",{parentName:"p",href:"https://cplusplus.com/reference/random/mersenne_twister_engine/"},"Mersenne Twister Engine"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool uuid_create_mt19937(uuid_rfc_string_t* result)\n")),(0,r.kt)("h3",{id:"uuid_create_v5"},"uuid_create_v5"),(0,r.kt)("p",null,"Generates a ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Universally_unique_identifier#Versions_3_and_5_(namespace_name-based)"},"name-based")," UUID using SHA-1 hashing to deterministically produce an identifier based on a given ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/10867405/generating-v5-uuid-what-is-name-and-namespace"},"namespace-name-pair"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool uuid_create_v5(const char* namespace_uuid_str, const char* name, uuid_rfc_string_t* result);\n")),(0,r.kt)("h3",{id:"uuid_create_system"},"uuid_create_system"),(0,r.kt)("p",null,"Generates a UUID using a nonstandard, platform-specific random number generator. It currently uses the following APIs internally:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Windows: ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/windows/win32/api/combaseapi/nf-combaseapi-cocreateguid"},"CoCreateGuid")),(0,r.kt)("li",{parentName:"ul"},"Linux: ",(0,r.kt)("a",{parentName:"li",href:"https://man7.org/linux/man-pages/man3/uuid_generate.3.html"},"uuid_generate")),(0,r.kt)("li",{parentName:"ul"},"Mac OS: ",(0,r.kt)("a",{parentName:"li",href:"https://developer.apple.com/documentation/corefoundation/1542906-cfuuidcreate?language=objc"},"CFUUIDCreate"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool uuid_create_system(uuid_rfc_string_t* result)\n")),(0,r.kt)("h2",{id:"changelog"},"Changelog"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Version"),(0,r.kt)("th",{parentName:"tr",align:"center"},"What happened?"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v0.0.1"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Initial release")))))}h.isMDXComponent=!0}}]);
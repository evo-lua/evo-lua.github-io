"use strict";(self.webpackChunkevo_lua_github_io=self.webpackChunkevo_lua_github_io||[]).push([[3514],{3905:(e,t,r)=>{r.d(t,{Zo:()=>g,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},g=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),c=s(r),p=o,m=c["".concat(u,".").concat(p)]||c[p]||d[p]||i;return r?n.createElement(m,a(a({ref:t},g),{},{components:r})):n.createElement(m,a({ref:t},g))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5089:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const i={},a="RFC: Standardized Logging Framework",l={unversionedId:"background-information/design/drafts/logging-framework",id:"background-information/design/drafts/logging-framework",title:"RFC: Standardized Logging Framework",description:"This document describes design goals for libuv-compatible logging",source:"@site/docs/background-information/design/drafts/logging-framework.md",sourceDirName:"background-information/design/drafts",slug:"/background-information/design/drafts/logging-framework",permalink:"/docs/background-information/design/drafts/logging-framework",draft:!1,editUrl:"https://github.com/evo-lua/evo-lua.github.io/edit/main/docs/background-information/design/drafts/logging-framework.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RFC: HTTP Protocol Implementation",permalink:"/docs/background-information/design/drafts/http-protocol"},next:{title:"Implemented",permalink:"/docs/category/implemented"}},u={},s=[{value:"Motivation",id:"motivation",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Alternatives",id:"alternatives",level:2}],g={toc:s},c="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rfc-standardized-logging-framework"},"RFC: Standardized Logging Framework"),(0,o.kt)("p",null,"This document describes design goals for libuv-compatible logging"),(0,o.kt)("h2",{id:"motivation"},"Motivation"),(0,o.kt)("p",null,"There's only one (moderately) active logging framework for Lua, which uses standard Lua I/O (not async via libuv)."),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"The framework MUST accomplish the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Allow for synchronous and asynchronous logging using libuv's I/O facilities"),(0,o.kt)("li",{parentName:"ul"},"Support multiple logging outputs at the same time (e.g., console and file on disk)"),(0,o.kt)("li",{parentName:"ul"},"Support multiple channels, following a standard syslog severity-based approach")),(0,o.kt)("p",null,"It SHOULD aim to do the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Follow an estbalished style of logging APIs, like log4j"),(0,o.kt)("li",{parentName:"ul"},"Be as performant as possible (I/O bound), with low impact on the event loop itself")),(0,o.kt)("h2",{id:"alternatives"},"Alternatives"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Make ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/lunarmodules/lualogging"},"LuaLogging")," work with libuv's event loop (viability TBD)"),(0,o.kt)("li",{parentName:"ul"},"Adapt one of the abandoned frameworks for luvit, like ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/gsick/luvit-logger"},"luvit-logger")," or ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/zhaozg/luvit-logging"},"luvit-logging")," (not worth it?)")))}d.isMDXComponent=!0}}]);
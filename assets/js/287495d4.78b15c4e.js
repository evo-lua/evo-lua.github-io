"use strict";(self.webpackChunkevo_lua_github_io=self.webpackChunkevo_lua_github_io||[]).push([[8575],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,y=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return n?r.createElement(y,o(o({ref:t},d),{},{components:n})):r.createElement(y,o({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6268:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>v,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={},o="json",s={unversionedId:"references/api/bindings/json",id:"references/api/bindings/json",title:"json",description:"Lua bindings for the embedded rapidjson library",source:"@site/docs/references/api/bindings/json.md",sourceDirName:"references/api/bindings",slug:"/references/api/bindings/json",permalink:"/docs/references/api/bindings/json",draft:!1,editUrl:"https://github.com/evo-lua/evo-lua.github.io/edit/main/docs/references/api/bindings/json.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"inspect",permalink:"/docs/references/api/bindings/inspect"},next:{title:"miniz",permalink:"/docs/references/api/bindings/miniz"}},l={},p=[{value:"Status",id:"status",level:2},{value:"Availability",id:"availability",level:2},{value:"Functions",id:"functions",level:2},{value:"version",id:"version",level:3},{value:"parse",id:"parse",level:3},{value:"stringify",id:"stringify",level:3},{value:"pretty",id:"pretty",level:3},{value:"prettier",id:"prettier",level:3},{value:"Changelog",id:"changelog",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},u=d("External"),c=d("Function"),m=d("Returns"),y=d("Return"),b=d("Parameters"),f=d("Parameter"),g={toc:p},k="wrapper";function v(e){let{components:t,...n}=e;return(0,a.kt)(k,(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"json"},"json"),(0,a.kt)("p",null,"Lua bindings for the embedded ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Tencent/rapidjson"},"rapidjson")," library"),(0,a.kt)("h2",{id:"status"},"Status"),(0,a.kt)(u,{mdxType:"External"}),(0,a.kt)("h2",{id:"availability"},"Availability"),(0,a.kt)("p",null,"This module is preloaded. You can simply ",(0,a.kt)("inlineCode",{parentName:"p"},"require")," it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local json = require("json")\n')),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("p",null,"All of the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/xpol/lua-rapidjson/blob/master/API.md"},"lua-rapidjson")," APIs are available in this module. Additional functions have been added in Evo, which are listed below."),(0,a.kt)("h3",{id:"version"},"version"),(0,a.kt)("p",null,"Returns the embedded rapidjson library version as a Lua string. The lua-rapidjson (bindings) version can be queried via ",(0,a.kt)("inlineCode",{parentName:"p"},"_VERSION"),"."),(0,a.kt)(c,{mdxType:"Function"},(0,a.kt)(m,{mdxType:"Returns"},(0,a.kt)(y,{name:"rapidjsonLibraryVersion",type:"string",mdxType:"Return"}))),(0,a.kt)("h3",{id:"parse"},"parse"),(0,a.kt)("p",null,"Parses the given input as a JSON string and returns a Lua table containing the equivalent data. Alias for ",(0,a.kt)("inlineCode",{parentName:"p"},"json.decode(...)"),"."),(0,a.kt)(c,{mdxType:"Function"},(0,a.kt)(b,{mdxType:"Parameters"},(0,a.kt)(f,{name:"jsonString",type:"string",mdxType:"Parameter"})),(0,a.kt)(m,{mdxType:"Returns"},(0,a.kt)(y,{name:"luaTable",type:"table",mdxType:"Return"}))),(0,a.kt)("h3",{id:"stringify"},"stringify"),(0,a.kt)("p",null,"Converts the given input table to a JSON string containing the equivalent data. Alias for ",(0,a.kt)("inlineCode",{parentName:"p"},"json.encode(...)"),"."),(0,a.kt)(c,{mdxType:"Function"},(0,a.kt)(b,{mdxType:"Parameters"},(0,a.kt)(f,{name:"luaTable",type:"table",mdxType:"Parameter"})),(0,a.kt)(m,{mdxType:"Returns"},(0,a.kt)(y,{name:"jsonString",type:"string",mdxType:"Return"}))),(0,a.kt)("h3",{id:"pretty"},"pretty"),(0,a.kt)("p",null,"Identical to ",(0,a.kt)("inlineCode",{parentName:"p"},"json.encode(...)"),", but accepts both strings and tables. Returns a human-readable JSON string with indentation and key sorting enabled. Indentation uses four spaces (lua-rapidjson default). You probably don't want to use this for performance-critical code."),(0,a.kt)(c,{mdxType:"Function"},(0,a.kt)(b,{mdxType:"Parameters"},(0,a.kt)(f,{name:"jsonStringOrTable",mdxType:"Parameter"})),(0,a.kt)(m,{mdxType:"Returns"},(0,a.kt)(y,{name:"prettifiedJSON",type:"string",mdxType:"Return"}))),(0,a.kt)("h3",{id:"prettier"},"prettier"),(0,a.kt)("p",null,"Identical to ",(0,a.kt)("inlineCode",{parentName:"p"},"json.pretty"),", but uses tabs for indentation (instead of four spaces). This saves some space, but is still unsuitable for performance-critical code paths due to the overhead of sorting and possibly redundantly re-encoding the provided string value."),(0,a.kt)(c,{mdxType:"Function"},(0,a.kt)(b,{mdxType:"Parameters"},(0,a.kt)(f,{name:"jsonStringOrTable",mdxType:"Parameter"})),(0,a.kt)(m,{mdxType:"Returns"},(0,a.kt)(y,{name:"prettifiedJSON",type:"string",mdxType:"Return"}))),(0,a.kt)("h2",{id:"changelog"},"Changelog"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},"Version"),(0,a.kt)("th",{parentName:"tr",align:"center"},"What happened?"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"v0.0.3"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Initial release")))))}v.isMDXComponent=!0}}]);